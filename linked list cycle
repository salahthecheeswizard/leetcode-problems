/* int this exercise we check if linked list is circular
and to begin the solution we need an algorithm first, and the algo we will be using is :
Floyd's Cycle-Finding Algorithm, also known as the Tortoise and Hare algorithm. */

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */
bool hasCycle(struct ListNode *head) {
    if(head==NULL || head->next == NULL)
        return false;
   struct  ListNode* slow = head;
   struct  ListNode* fast = head;
     while(fast != NULL && fast->next != NULL){
         fast = fast->next->next;
         slow = slow->next;
         if(fast == slow)
             return true;
     }
    return false;
}
